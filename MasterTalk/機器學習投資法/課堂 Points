Data types in Python
  *Numeric Types
  *Sequence Types
    >Lists: a collection which is ordered and mutable
    ex:list1 = [2,8.5,False]    list2 = list([2,8.5,False])
      -增加元素: list1.append(-23)，默認在最後添加；list1.extend([-1,-2,-4])，增加比較多元素可用此方法
      -插入元素: list1.insert(2,[1,2,3])，第一個引數為index，表示要在哪裡做插入
      -刪除元素: list1.pop()，表示刪除最後一個元素；list.pop(3)，表示刪除index為3的元素；list1.remove(8.5)，表示刪除第一個出現數值為8.5的元素
    >Tuples: a collection which is ordered and immutable 
    ex:tu1=(123,45,6,7,8.6)  tu2= 123,45,6,7,8.6 tu3=tuple([123,45,6,7,8.6])；tu4=(123,)，只有一個元素時，要跟著一個逗號
    >Range Objects: represents an immutable sequence of numbers
    >Strings: a special type of sequence that can only store characters
    ex:st1="Finance in Python" st2 = 'stock price' st3="""beauty'of Python""" ，打印出來的效果略有不同, st4 = str(123456)
    ex:'234,456,345'.split(',') -> ['234','456','345']；'234,456,345'.split('3') ->['2','4,456,','45']
		ex: ''.join(['a','b','c','d']) -> 'abcd' ； ','.join(['a','b','c','d']) -> 'a,b,c,d'
		ex: 'Finance'.lower() ->'finance' ； 'Stockprice'.upper() -> 'STOCKPRICE'
		ex: a = 'Python' a.find('t') -> 2，表示在index為2的地方找到t這個字符
  *Set Types (集合本身可變，但集合內元素不可變,例如:{1,[2,3]}會報錯，因為[2,3]是可變的)
    >contains an unordered collection of unique and immutable objects
		ex:Days = set(["Sun","Mon","Tue","Wed","Thur","Fri","Sat"])，打印出來是不會照原本順序的，驗證set是無序的
		ex:Dates = set((1,2,3))，打印出來為{1,2,3}
		ex:x = {'a','b','b','c'} ->打印出來為{'a','b','c'}
			-創建空集合:只能用set()去創建
			-size: len()
			-membership: in；not in
			-集合的操作是模仿數學集合的操作
				#Union: x1.union(x2[,x3...]) or x1|x2[|x3]
				#intersection: x1.intersection(x2[,x3...]) or x1&x2[&x3]
				#difference: x1.difference(x2[,x3...]) or x1 - x2[-x3] , means return the set of all elements that are in x1 but not in x2
				#symmetric difference:x1.symmetric_difference(x2[,x3...]) or x1 ^ x2[^x3] ,return the set of all elements in either x1 or x2,but not both
			-relationship between two sets
				#x1.isdisjoint(x2) determines whether or not two sets have any elements in common.
				#x1.issubset(x2) determine whether one set is a subset of the other，也可用x1 <= x2
				#x1.issuperset(x2) determine whether one set is a superset of the other，也可用x1 >= x2
				#x1 > x2(嚴格大於) , a proper superset is the same as a superset,except that the set can't be identical
				#modifying a set: x1.update(x2) or x1 |= x2；x1.intersection_update(x2) or x1 &= x2 ；x1.difference_update(x2) or x1 -= x2
  *Mapping Types
    >There is currently only one standard ㄍmapping type, the dictionary

An abstract base class(ABC) 抽象基類
  *a blueprint for other classes.
